/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  BT  |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  NAV |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | NUM | BSPC | MOD|   | ENT | SPC  | FUNC |
                        label = "Base";
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &mo 1
   &kp TAB &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &tog 5
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &tog 3 &kp BSPC  &mo 2   &kp RET &kp SPACE &tog 4
                        >;
                };
                bluetooth_layer {
// -----------------------------------------------------------------------------------------
// | BT1 | BT2 | BT3 | BT4 | BT5 | |  |     |     |    |     |     |   |
// | CLR  |     |     |     |     |     |   |     |     |    |   |     |      |
// | CLR |     |     | CLR |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |  |
                        label = "Bluethooth";
                        bindings = <
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans        &trans &trans &trans &trans &trans &trans
   &bt BT_CLR   &trans       &trans       &trans       &trans       &trans        &trans &trans &trans &trans &trans &trans
   &bt BT_CLR   &trans       &trans       &bt BT_CLR   &trans       &trans        &trans &trans &trans &trans &trans &trans
                          	      &trans &trans &trans              &trans &trans &trans
                        >;
                };

                mod_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | NUM | BSPC | MOD|   | ENT | SPC  | FUNC |
                        label = "mod";
                        bindings = <
   &kp ESC  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &mo 1
   &kp TAB &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &tog 5
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp RSHFT
                    	       &tog 3 &kp BSPC  &mo 2   &kp RET &kp SPACE &tog 4
                        >;
                };
        };
};
